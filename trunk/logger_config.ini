###########################################################################
#                           _              
#   ~Q~                    (_)             
#                 ___ _   ___ __ __      __
#                / __| | | | / __\ \ /\ / /
#               | (__  |_| | \__ \\ V  V / 
#                \___|\__,_|_|___/ \_/\_/  
#
# Copyright (C) 2008 - 8002, Cui Shaowei, <shaovie@gmail.com>, It's free.
###########################################################################

[Output]
# Log root dir
# If value is ''(null), the log_dir default set to `./'
log_dir = ./log

# Mode of log-msg be output
# Support : STDOUT|FILES|NULL
# Not output log message to anywhere if NULL is set.
# If value is ''(null), the output default set to `NULL'
output = FILES

[Module]
# The modules that you want to set detailedly. The parser just parses the 
# modules which appear in <modules>'s key-value.
# Must lost backslash('\') if you need to input multi-lining.
# "root" is not necessary, the max length of module-name is 255.
# All of modules splited by ":".
# modules = http_server:http_server.request:main.test
modules = 

# Support : ALLS|TRACE|DEBUG|WNING|ERROR|RINFO|FATAL|SHUTDOWN
# Log level is hereditable, all of modules inherit from <root>
# If value is ''(null), the root has not strategy.
# Don't delete this attribute !!!.
root = ALLS|WNING|ERROR|RINFO#|FATAL|SHUTDOWN

# Example :
# http_server = TRACE|RINFO      # actually is root.http_server
# http_server.request = DEBUG
# ftp_server.download = RINFO|FATAL
# If you want to close the logger of this module, you must type `SHUTDOWN'
# and not ''.
# ftp_server.upload = SHUTDOWN
# If value is ''(null), the module's configure inherits from its parent
# ftp_server.login=
# main = ERROR
# main.test = RINFO|DEBUG
# http_server = RINFO|DEBUG
# http_server.request = TRACE

[Strategy]
# Logger accesses this config-file per <check_config_interval>,
# that will reload this config-file that be modified and validate
# the new strategy.
# The 'interval' is by Second Unit if the last charactor is 's/S',
# on 'm/M' by minute, others are not supported(default is 's'). 
check_config_interval = 3s

# Support : HOURLY/DAILY/WEEKLY
# How long create a new log file.
# If value is ''(null), this abbtribute will be disable.
generate_file_period = 

# If set this attribute, the creating file period will be <count> times
# of <gerneral_file_period>.
count = 2

# If the size of the file is out of <single_file_size> limit
# then rotate by <max_rolloever_index>.
# If value is ''(null), use default value "%Y-%m-%d.log"
file_name = http-svc

# Single file size. 
# The 'size' is by MBytes Unit if the last charactor is 'M',
# on 'K' by KBytes, others do not supported(default is 'M').
# If value is ''(null), the file size is unlimited.
single_file_size = 50K

# Max index of rolloever.
# For example : <max_rolloever_index> = 5
# 2008-08-08.log(current), 2008-08-08.log.1, 2008-08-08.log.2, 
# 2008-08-08.log.3, 2008-08-08.log.4, 2008-08-08.log.5(lasted).
# Default value is 5
max_rolloever_index = 5

[LogRecord]
# '[]<>:' are just separators, you can replace them.
# Support :[%date %time.%msec][%thr]<%level><%module>: this is a log msg
# Example:
# [2008-08-08 13:15:06.736][3085416128]<LOG_RINFO><Logger.output>: log record 
# Default is `[%date %time.%msec][%thr]<%level><%module>:'
# record_format = [%time.%msec][%thr]<%level><%module>:

# Max length of one log record(not include format string!!), Bytes Unit
max_len_of_one_record = 512

